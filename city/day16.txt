面试题39. 数组中出现次数超过一半的数字

数组中有一个数字出现的次数超过数组长度的一半，请找出这个数字。

 

你可以假设数组是非空的，并且给定的数组总是存在多数元素。

 

示例 1:

输入: [1, 2, 3, 2, 2, 2, 5, 4, 2]
输出: 2

 

限制：

1 <= 数组长度 <= 50000

--------------------------------------------------------
class Solution {
public:
    int majorityElement(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        int len=nums.size();
        return nums[len/2];
    }
};



面试题63. 股票的最大利润

假设把某股票的价格按照时间先后顺序存储在数组中，请问买卖该股票一次可能获得的最大利润是多少？

 

示例 1:

输入: [7,1,5,3,6,4]
输出: 5
解释: 在第 2 天（股票价格 = 1）的时候买入，在第 5 天（股票价格 = 6）的时候卖出，最大利润 = 6-1 = 5 。
     注意利润不能是 7-1 = 6, 因为卖出价格需要大于买入价格。

示例 2:

输入: [7,6,4,3,1]
输出: 0
解释: 在这种情况下, 没有交易完成, 所以最大利润为 0。

 

限制：

0 <= 数组长度 <= 10^5
-----------------------------------------------------------------------------------

 class Solution {
  public:
	  map<int, int>mp;
	  int maxProfit(vector<int>& prices) {
		  int len = prices.size();
		  mp[len] = 0;
		  for (int i = len-1; i >= 0; i--) {
			  int temp= max(mp[i+1], prices[i]);
			  mp[i] = temp;
		  }
		  int ans = 0;
		  for (int i = 0; i < len; i++) {
			  ans = max(ans, mp[i] - prices[i]);
		  }
		  return ans;
	  }
  };