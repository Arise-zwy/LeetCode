1. 两数之和

给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。

你可以假设每种输入只会对应一个答案。但是，数组中同一个元素不能使用两遍。

 

示例:

给定 nums = [2, 7, 11, 15], target = 9

因为 nums[0] + nums[1] = 2 + 7 = 9
所以返回 [0, 1]

 class Solution {
  public:
	  
	  map<int, int>vis;
	  map<int, int>temp;
	  vector<int> twoSum(vector<int>& nums, int target) {
		  vector<int>p;
		  int len = nums.size();
		 
		  for (int i = 0; i < len; i++) {
			  if (vis[nums[i]] != 0) {
				  temp[nums[i]] = vis[nums[i]];
				  vis[nums[i]] = i + 1;
			  }
			  else
				  vis[nums[i]] = i + 1;
		  }
		  for (int i = 0; i < len; i++) {
			  if (vis[target - nums[i]] >0)
			  {
				  if (target - nums[i] == nums[i]) {
					  if (temp[nums[i]] != 0) {
						  p.push_back(temp[nums[i]] - 1);
						  p.push_back(vis[nums[i]] - 1);
						  break;
					  }
				  }
				  else {
					  p.push_back(i);
					  p.push_back(vis[target - nums[i]] - 1);
					  break;
				  }
				  
			  }
		  }
		  return p;
	  }
  };