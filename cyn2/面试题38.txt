class Solution {
public:
    vector<string> ans;
    string tmp;
    void dfs(string s,vector<bool>& st)
    {
        if(tmp.size()==s.size())
        {
            ans.push_back(tmp);
        }
        for(int i=0;i<s.size();i++)
        {
            if(st[i]==false)
            {
                if(i>0&&s[i]==s[i-1]&&st[i-1]==false) continue;
                st[i]=true;
                tmp+=s[i];
                dfs(s,st);
                st[i]=false;
                tmp.pop_back();
            }
        }
    }
    vector<string> permutation(string s) 
    {
        int n=s.size();
        if(n==0) return ans;
        if(n==1) return {s};
        sort(s.begin(),s.end());
        vector<bool> st(n,false);
        dfs(s,st);
        return ans;

    }
};